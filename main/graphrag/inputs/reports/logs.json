{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101313260467306369292950674)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101313260467306369292950674)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Community Relations Analyst. You are skilled at understanding complex systems, mapping out organizational structures, and identifying key relationships. You are adept at helping people with analyzing the community of interest, especially when it comes to Education and University Regulations, providing insightful reports that can be used for strategic planning and decision-making.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u5fc5\\u4fee\\u8bfe\\u7a0b\\u5e73\\u5747\\u6210\\u7ee9\"\nDescription List: [\"\", \"指学生在必修课程中取得的平均分数>\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101313260482790640676868778)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101313260482790640676868778)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Community Relations Analyst. You are skilled at understanding complex systems, mapping out organizational structures, and identifying key relationships. You are adept at helping people with analyzing the community of interest, especially when it comes to Education and University Regulations, providing insightful reports that can be used for strategic planning and decision-making.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u5fb7\\u80b2\\u8003\\u6838\\u6210\\u7ee9\"\nDescription List: [\"\", \"针对学生品德教育的考核结果>\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254865714133281437626)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254865714133281437626)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u8d1f\\u8d23\\u89e3\\u91ca\"\nDescription List: [\"\", \"由学生工作部（处）负责解释条例内容\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254877981295565730922)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254877981295565730922)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u76d1\\u7763\"\nDescription List: [\"\", \"学生工作部（处）接受监督以提升工作效率和服务质量\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254886394240325996307)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254886394240325996307)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u5168\\u56fd\\u5b66\\u751f\\u8d44\\u52a9\\u7ba1\\u7406\\u4e2d\\u5fc3\"\nDescription List: [\"全国学生资助管理中心协助处理学生资助申请信息\", \"全国学生资助管理中心是负责学生资助政策的行政中心>\", \"负责审批利息代偿申请的中央管理机构>\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254891893521912717115)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254891893521912717115)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u4f18\\u79c0\\u5956\\u5b66\\u91d1\"\nDescription List: [\"优秀奖学金是奖学金的一种类型\", \"学校优秀奖学金是除国家励志奖学金外的另一种奖学金\", \"表彰学术成就或全面发展的奖学金)>\", \"针对学习成绩优秀的奖学金\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 202410131425493918188176143164)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 202410131425493918188176143164)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u5b66\\u751f\\u4ee3\\u8868\"\nDescription List: [\"代表学生参与决策的人\", \"参与决策过程的学生代表\", \"由班级推荐产生的学生代表\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 202410131425494545374796075613)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 202410131425494545374796075613)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u4e66\\u9762\\u7533\\u8bc9\\u7533\\u8bf7\"\nDescription List: [\"学生提出的书面申诉请求学生提出的正式书面申诉请求\", \"正式书面形式的申诉）\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254926325748470250274)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254926325748470250274)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u7533\\u8bc9\\u5904\\u7406\"\nDescription List: [\"\", \"对学生的申诉进行处理的过程）\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254926132467440497686)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254926132467440497686)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u5b66\\u751f\\u7533\\u8bc9\\u5904\\u7406\"\nDescription List: [\"\", \"对学生提出的申诉进行评估和裁决的程序）\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254939687921591434085)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254939687921591434085)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u590d\\u67e5\"\nDescription List: [\"对原始决定的再次检查审核\", \"进一步检查原始决定过程和结果以确定其公正性的程序）\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254967866984457975253)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254967866984457975253)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u590d\\u67e5\\u7ed3\\u8bba\"\nDescription List: [\"\", \"复查结论是对于学生申诉的最终决定）\", \"学生申诉处理委员会就申诉案件做出的最终决定）\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254986951565961605955)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254986951565961605955)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u7533\\u8bc9\\u671f\\u9650\"\nDescription List: [\"学生在接到复查结论后有15天的申诉期限）\", \"学生提出申诉的最后期限）\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254981235421411394110)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314254981235421411394110)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u666e\\u901a\\u9ad8\\u7b49\\u5b66\\u6821\\u5b66\\u751f\\u7ba1\\u7406\\u89c4\\u5b9a\"\nDescription List: [\"关于普通高等学校的大学生管理规定\", \"关于高等学校的通用学生管理规定\", \"针对普通高等学校的管理规定\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255379487764603668038)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255379487764603668038)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: \"\\u5fb7\\u80b2\\u8003\\u6838\"\nDescription List: [\"\", \"对学生的道德品质进行评估\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255384379006403235147)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255384379006403235147)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: [\"\\u663e\\u8457\\u6210\\u7ee9\", \"\\u4f53\\u80b2\\u7ade\\u8d5b\"]\nDescription List: [\"体育竞赛成绩包括在省级以上体育比赛中的前三名获得\", \"在体育竞赛中取得显著成绩\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255392197479388410118)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255392197479388410118)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: [\"\\u83b7\\u5956\\u60c5\\u51b5\", \"\\u8bb0\\u5165\\u6863\\u6848\"]\nDescription List: [\"学生的获奖情况被永久记录在档案中\", \"获奖情况记入学生学籍档案\"]\n#######\nOutput:"}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 1490, in create\n    return await self._post(\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1832, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1526, in request\n    return await self._request(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ggg/miniconda3/envs/graphrag/lib/python3.11/site-packages/openai/_base_client.py\", line 1627, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.RateLimitError: Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255391425351948890438)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}\n", "source": "Error code: 429 - {'error': {'message': '当前分组上游负载已饱和，请稍后再试 (request id: 2024101314255391425351948890438)', 'type': 'upstream_error', 'param': '429', 'code': 'bad_response_status_code'}}", "details": {"input": "\nYou are an expert Sociologist. You are skilled at analyzing complex social structures and identifying intricate relationships within communities. You are adept at helping people understand the dynamics and policies governing educational institutions and university systems, providing insightful recommendations for enhancing community engagement and policy effectiveness.\nUsing your expertise, you're asked to generate a comprehensive summary of the data provided below.\nGiven one or two entities, and a list of descriptions, all related to the same entity or group of entities.\nPlease concatenate all of these into a single, concise description in Chinese. Make sure to include information collected from all the descriptions.\nIf the provided descriptions are contradictory, please resolve the contradictions and provide a single, coherent summary.\nMake sure it is written in third person, and include the entity names so we have the full context.\n\nEnrich it as much as you can with relevant information from the nearby text, this is very important.\n\nIf no answer is possible, or the description is empty, only convey information that is provided within the text.\n#######\n-Data-\nEntities: [\"\\u89e3\\u91ca\", \"\\u5b66\\u751f\\u5de5\\u4f5c\\u90e8\\uff08\\u5904\\uff09\"]\nDescription List: [\"学生工作部（处）负责对条例的具体条款进行解释\", \"学生工作部（处）负责解释相关规定\"]\n#######\nOutput:"}}
